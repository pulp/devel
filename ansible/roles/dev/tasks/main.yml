- name: Clone pulp into {{ pulp_devel_dir }}
  git:
    dest: '{{ pulp_devel_dir }}/pulp'
    repo: https://github.com/pulp/pulp.git
    version: '3.0-dev'
    update: false
  become: true
  become_user: '{{ pulp_user }}'

- block:

  - name: Install bindings required by the Ansible SELinux module (Fedora)
    package:
      name:
        - libselinux-python{% if ansible_distribution == "Fedora" %}3{% endif %}
        - selinux-policy
      state: present
    when: ansible_distribution == 'Fedora'

  - name: Disable selinux
    selinux:
      state: disabled

  - name: Disable sshd strict modes
    lineinfile:
      backrefs: yes
      dest: /etc/ssh/sshd_config
      regexp: '^#StrictModes yes'
      line: 'StrictModes no'
    notify: restart sshd

  # The python2 version is required for mkvenv as mkvenv doesn't seem to respect
  # the VIRTUALENVWRAPPER_PYTHON variable.
  - name: Install python-virtualenvwrapper
    package:
      name: python-virtualenvwrapper
    when: pulp_venv is defined

  # Ther is or was a dependency bug with the python3-virtualenvwrapper package,
  # and installing which works around it.
  - name: Install python3-virtualenvwrapper (Fedora)
    package:
      name:
        - which
        - python3-virtualenvwrapper
    when:
      - pulp_venv is defined
      - ansible_distribution == 'Fedora'

  - name: Install sqlite
    package:
      name: sqlite
      state: present

  - name: Install tools for compiling a PostgreSQL database adapter
    package:
      name:
        - gcc
        - postgresql-devel

  become: true

- block:

  - name: Create pulp virtualenv
    command: '{{ pulp_python_interpreter }} -m venv {{ pulp_venv }}'
    args:
      creates: '{{ pulp_venv }}'
    register: result

  - name: Update pip in virtualenv
    pip:
      name: pip
      state: latest
      executable: '{{ pulp_scl_enable_python3 }}{{ pulp_venv }}/bin/pip'
    when: result is changed
    tags:
      - skip_ansible_lint

  - name: Install Pulp Platform packages
    pip:
      name: '{{ pulp_devel_dir }}/pulp/{{ item }}'
      extra_args: '-e'
      executable: '{{ pulp_scl_enable_python3 }}{{ pulp_venv }}/bin/pip'
    with_items:
      - common
      - pulpcore
      - plugin

  - name: Install developer extra-requirements
    pip:
      requirements: '{{ pulp_devel_dir }}/pulp/{{ item }}'
      executable: '{{ pulp_scl_enable_python3 }}{{ pulp_venv }}/bin/pip'
    with_items:
      - test_requirements.txt
      - dev_requirements.txt
      - doc_requirements.txt

  - name: Enable autoenv Directory Switching for pulp
    lineinfile:
      dest: '{{ pulp_venv }}/.project'
      line: '{{ pulp_devel_dir }}/pulp'
      create: true
      regexp: '.*'
    when: pulp_venv is defined

  - name: Add Django supplemental bashrc
    copy:
      src: files/django.bashrc
      dest: '{{ pulp_user_home }}/.bashrc.d/django.bashrc'
    when: supplement_bashrc

  - name: Add virtualenv supplemental bashrc
    copy:
      src: files/venv.bashrc
      dest: '{{ pulp_user_home }}/.bashrc.d/venv.bashrc'
    when: pulp_venv is defined and supplement_bashrc

  become: true
  become_user: '{{ pulp_user }}'

- name: Generate random secret for Django
  shell: cat /dev/urandom | tr -dc 'a-z0-9!@#$%^&*(\-_=+)' | head -c 50
  register: random_secret
  tags:
    - skip_ansible_lint

- block:

  - name: Create /etc/pulp directory
    file:
      path: /etc/pulp
      state: directory

  - name: Install server.yaml Config file
    copy:
      remote_src: true
      src: '{{pulp_devel_dir}}/pulp/pulpcore/pulpcore/etc/pulp/server.yaml'
      dest: '/etc/pulp/server.yaml'

  - name: Add development server configuration in server.yaml
    blockinfile:
      path: '/etc/pulp/server.yaml'
      block: |
        # Pulp Development Configuration
        DEBUG: True
        SECRET_KEY: '{{ random_secret.stdout }}'

  - name: Add Qpid broker settings override in server.yaml
    blockinfile:
      path: '/etc/pulp/server.yaml'
      marker: '# {mark} QPID SETTINGS OVERRIDE BLOCK'
      block: |
        broker:
          url: qpid://localhost/
    when: use_rabbitmq == False

  - name: Create /var/lib/pulp directory
    file:
      path: /var/lib/pulp
      state: directory
      owner: '{{ pulp_user }}'
      group: '{{ pulp_user }}'
      mode: 0755

  - name: Create /var/lib/pulp/tmp directory
    file:
      path: /var/lib/pulp/tmp
      state: directory
      owner: '{{ pulp_user }}'
      group: '{{ pulp_user }}'
      mode: 0755

  become: true

- name: Create and run migrations for {{ pulp_app }}
  include_role:
    name: django_db
  vars:
    app_label: pulp_app

- name: Install a custom version of Kombu
  include_role:
    name: kombu_fixup
  when: use_rabbitmq == False
